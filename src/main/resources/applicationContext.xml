<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	        http://www.springframework.org/schema/beans/spring-beans.xsd
	        http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context.xsd
	        http://www.springframework.org/schema/aop
	        http://www.springframework.org/schema/aop/spring-aop.xsd
	        http://www.springframework.org/schema/tx
	        http://www.springframework.org/schema/tx/spring-tx.xsd
	        http://www.springframework.org/schema/mvc">


<!--	配置注解扫描器-->
	<context:component-scan base-package="com.liyue"></context:component-scan>

<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<!--	导入配置文件-->
	<context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>


<!--
	xml设置事务管理

			1.配置事务管理器
			2.配置事务通知
			3.配置aop
			4.切入点连接事务管理器
			5.配置事务的属性
-->

	<bean id="transacationManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!--<tx:advice id="txAdvice" transaction-manager="transacationManger">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" read-only="false"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		&lt;!&ndash; 配置切入点表达式&ndash;&gt;
		<aop:pointcut id="pt1" expression="execution(* com.liyue.services.impl.*.*(..))"></aop:pointcut>
		&lt;!&ndash;建立切入点表达式和事务通知的对应关系 &ndash;&gt;
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
	</aop:config>
-->

<!--	使用注解配置事务管理器-->
	<tx:annotation-driven transaction-manager="transacationManger"></tx:annotation-driven>


<!--
	打印日志信息使用xml事务管理打印日志
	<bean id="logger" class="com.liyue.utils.Logger"></bean>

	<aop:config>
		<aop:aspect id="logAdvice" ref="logger">  &lt;!&ndash;切入点和通知的结合 切面&ndash;&gt;

			<aop:pointcut id="py" expression="execution(* com.liyue.services.impl.*.*(..))"></aop:pointcut>
			&lt;!&ndash;  前置通知，当方法执行之前&ndash;&gt;
			<aop:before method="before" pointcut-ref="py"></aop:before>
		&lt;!&ndash;	&lt;!&ndash;  后置通知， 当方法执行完之后&ndash;&gt;
			<aop:after-returning method="afterReturnPrintLog" pointcut-ref="py"></aop:after-returning>&ndash;&gt;
			&lt;!&ndash; 异常通知，当方法出现异常之后&ndash;&gt;
			<aop:after-throwing method="afterThrow" pointcut-ref="py"></aop:after-throwing>
			&lt;!&ndash; 最终通知&ndash;&gt;
			<aop:after method="after" pointcut-ref="py"></aop:after>
		</aop:aspect>
	</aop:config>
-->

<!--
	使用注解打印日志信息-->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>



</beans>